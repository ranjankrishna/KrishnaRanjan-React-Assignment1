{"ast":null,"code":"import _asyncToGenerator from \"/Users/kranjan/Documents/GreatLearning/React Assignment/Assignment on Movie/movie-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/kranjan/Documents/GreatLearning/React Assignment/Assignment on Movie/movie-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kranjan/Documents/GreatLearning/React Assignment/Assignment on Movie/movie-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kranjan/Documents/GreatLearning/React Assignment/Assignment on Movie/movie-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kranjan/Documents/GreatLearning/React Assignment/Assignment on Movie/movie-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kranjan/Documents/GreatLearning/React Assignment/Assignment on Movie/movie-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kranjan/Documents/GreatLearning/React Assignment/Assignment on Movie/movie-client/src/components/movie-list/MoviesListIndia.tsx\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport React, { Component } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport LoadingIndicator from '../common/LoadingIndicator';\nimport MovieListItemTopRatedIndian from \"./MovieListItemTopRatedIndian\";\nimport { getTopRatedIndian } from '../../services/TopRatedIndian';\n\nvar MoviesListIndia = /*#__PURE__*/function (_Component) {\n  _inherits(MoviesListIndia, _Component);\n\n  function MoviesListIndia() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MoviesListIndia);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MoviesListIndia)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      status: 'LOADING',\n      movies: []\n    };\n    return _this;\n  }\n\n  _createClass(MoviesListIndia, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var el;\n      var _this$state = this.state,\n          status = _this$state.status,\n          movies = _this$state.movies,\n          error = _this$state.error;\n\n      switch (status) {\n        case 'LOADING':\n          el = /*#__PURE__*/React.createElement(LoadingIndicator, {\n            size: \"large\",\n            message: \"We are loading movies, please wait..\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 21\n            }\n          });\n          break;\n\n        case 'LOADED':\n          el = /*#__PURE__*/React.createElement(Row, {\n            xs: 1,\n            md: 2,\n            lg: 6,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }\n          }, movies.map(function (movie) {\n            return /*#__PURE__*/React.createElement(Col, {\n              key: movie.title,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(MovieListItemTopRatedIndian, {\n              movieIndia: movie,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 41\n              }\n            }));\n          }));\n          break;\n\n        case 'ERROR_LOADING':\n          break;\n      }\n\n      return el;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  status: 'LOADING'\n                });\n                _context.prev = 1;\n                _context.next = 4;\n                return getTopRatedIndian();\n\n              case 4:\n                data = _context.sent;\n                this.setState({\n                  status: 'LOADED',\n                  movies: data\n                });\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n                this.setState({\n                  status: 'ERROR_LOADING'\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 8]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }]);\n\n  return MoviesListIndia;\n}(Component);\n\nexport default MoviesListIndia;","map":{"version":3,"names":["React","Component","Row","Col","LoadingIndicator","MovieListItemTopRatedIndian","getTopRatedIndian","MoviesListIndia","state","status","movies","el","error","map","movie","title","setState","data"],"sources":["/Users/kranjan/Documents/GreatLearning/React Assignment/Assignment on Movie/movie-client/src/components/movie-list/MoviesListIndia.tsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Alert, Row, Col } from \"react-bootstrap\";\nimport ITopRatedIndian from \"../../models/ITopRatedIndian\";\nimport { LoadingStatus } from '../../models/types';\nimport LoadingIndicator from '../common/LoadingIndicator';\nimport MovieListItemTopRatedIndian from \"./MovieListItemTopRatedIndian\";\nimport {getTopRatedIndian} from '../../services/TopRatedIndian';\n\ntype Props = {\n\n};\n\ntype State = {\n    status: LoadingStatus,\n    movies: ITopRatedIndian[ ],\n    error?: Error\n};\n\n\n\nclass MoviesListIndia extends Component<Props, State>{\n    state: State = {\n      status: 'LOADING',\n      movies: []\n    };\n    render() {\n        let el;\n        const { status, movies, error } = this.state;\n\n        switch (status) {\n            case 'LOADING':\n                el = (\n                    <LoadingIndicator\n                        size=\"large\"\n                        message=\"We are loading movies, please wait..\"\n                    />\n                );\n                break;\n            case 'LOADED':\n                el = (\n                    <Row xs={1} md={2} lg={6}>\n                        {\n                            movies.map(\n                                movie => (\n                                    <Col key={movie.title}>\n                                        <MovieListItemTopRatedIndian\n                                            movieIndia={movie} />\n                                    </Col>\n                                )\n                            )\n                        }\n                    </Row>\n                );\n                break;\n            case 'ERROR_LOADING':\n                break;\n        }\n        return el;\n    }\n    async componentDidMount(){\n      this.setState ({\n        status: 'LOADING'\n      });\n\n     try{\n        const data = await getTopRatedIndian();\n        this.setState({\n          status: 'LOADED',\n          movies: data\n        })\n     }catch(error){\n      this.setState({\n        status: 'ERROR_LOADING'\n      })\n     }\n    }\n}\n\nexport default MoviesListIndia;"],"mappings":";;;;;;;;+CACA,oJ;;AADA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAgBC,GAAhB,EAAqBC,GAArB,QAAgC,iBAAhC;AAGA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,2BAAP,MAAwC,+BAAxC;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;;IAcMC,e;;;;;;;;;;;;;;;UACFC,K,GAAe;MACbC,MAAM,EAAE,SADK;MAEbC,MAAM,EAAE;IAFK,C;;;;;;6BAIN;MAAA;;MACL,IAAIC,EAAJ;MADK,kBAE6B,KAAKH,KAFlC;MAAA,IAEGC,MAFH,eAEGA,MAFH;MAAA,IAEWC,MAFX,eAEWA,MAFX;MAAA,IAEmBE,KAFnB,eAEmBA,KAFnB;;MAIL,QAAQH,MAAR;QACI,KAAK,SAAL;UACIE,EAAE,gBACE,oBAAC,gBAAD;YACI,IAAI,EAAC,OADT;YAEI,OAAO,EAAC,sCAFZ;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,EADJ;UAMA;;QACJ,KAAK,QAAL;UACIA,EAAE,gBACE,oBAAC,GAAD;YAAK,EAAE,EAAE,CAAT;YAAY,EAAE,EAAE,CAAhB;YAAmB,EAAE,EAAE,CAAvB;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAEQD,MAAM,CAACG,GAAP,CACI,UAAAC,KAAK;YAAA,oBACD,oBAAC,GAAD;cAAK,GAAG,EAAEA,KAAK,CAACC,KAAhB;cAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAAA,gBACI,oBAAC,2BAAD;cACI,UAAU,EAAED,KADhB;cAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAAA,EADJ,CADC;UAAA,CADT,CAFR,CADJ;UAcA;;QACJ,KAAK,eAAL;UACI;MA1BR;;MA4BA,OAAOH,EAAP;IACH;;;;;;;;;;gBAEC,KAAKK,QAAL,CAAe;kBACbP,MAAM,EAAE;gBADK,CAAf;;;uBAKqBH,iBAAiB,E;;;gBAA9BW,I;gBACN,KAAKD,QAAL,CAAc;kBACZP,MAAM,EAAE,QADI;kBAEZC,MAAM,EAAEO;gBAFI,CAAd;;;;;;;gBAKF,KAAKD,QAAL,CAAc;kBACZP,MAAM,EAAE;gBADI,CAAd;;;;;;;;;;;;;;;;;;;EAnDwBR,S;;AA0D9B,eAAeM,eAAf"},"metadata":{},"sourceType":"module"}